// "BatchParseLSMMetadata"
//
// This macro batch processes all the lsm files in a folder
// extracting the metadata and saves an output xml file
// Requires LSM Toolbox 4.0f

// (Slightly) Adapted by Greg Jefferis from code at
// http://rsb.info.nih.gov/ij/macros/BatchProcessFolders.txt

// jefferis@gmail.com

requires("1.33s"); 
dir = getArgument;  // if we're running from the command line
if (dir=="")  // interactive
	dir = getDirectory("Choose a stacks directory");

//outputDir = getDirectory("Choose output directory");
// just leave the xml files next to the lsm images for now
outputDir=dir;

setBatchMode(true);
// Access to macro functions in LSM Toolbox
run("Show LSMToolbox","ext");
count = 0;
countFiles(dir);
print("Total files: "+count);
n = 0;
processFiles(dir, outputDir);

function countFiles(dir) {
	list = getFileList(dir);
	for (i=0; i<list.length; i++) {
		if (endsWith(list[i], "/"))
            countFiles(""+dir+list[i]);
	else // only count if this is an lsm file
		if(isLSMFile(list[i])) count++;
	}
}

function processFiles(dir,outputDir) {
	list = getFileList(dir);
    for (i=0; i<list.length; i++) {
        if (endsWith(list[i], "/"))
            processFiles(""+dir+list[i], outputDir+list[i]);
        else {
		if(isLSMFile(list[i])){
			showProgress(n++, count);
				processFile(dir,outputDir,list[i]);				
			}
        }
    }
}

function processFile(dir,outputDir,file) {
	path = dir+file;
	// Contstruct the output path
	xmlpath=outputDir+substring(file,0,lengthOf(file)-4)+".xml";
	ignorepath=outputDir+substring(file,0,lengthOf(file)-4)+".ignore";
	// if it doesn't exist 
	if(!File.exists(xmlpath) && !File.exists(ignorepath)){
		// then Parse XML metadata for that image
		print("Parsing metadata for: "+file);
		xml = Ext.lsmXML(path);
		File.saveString(xml, xmlpath);
	}
}

function isLSMFile(file){
	if (endsWith(file, ".lsm") || endsWith(file,".LSM")) return true;
	else return false;
}