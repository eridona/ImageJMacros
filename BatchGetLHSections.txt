// "BatchGetLHSections"
//
// This macro batch processes all the PIC files in a folder
// It first merges 01-02 channels and then generated 4 slices through LH.

// (Slightly) Adapted by Sebastian from code at
// http://rsb.info.nih.gov/ij/macros/BatchProcessFolders.txt

// jefferis@gmail.com

requires("1.33s"); 
dir = getDirectory("Choose a stacks directory");
//outputDir = getDirectory("Choose output directory");
outputDir="";
setBatchMode(true);
count = 0;
countFiles(dir);
print("Total files: "+count);
n = 0;
processFiles(dir, outputDir);

function countFiles(dir) {
		list = getFileList(dir);
	for (i=0; i<list.length; i++) {
		if (endsWith(list[i], "/"))
            countFiles(""+dir+list[i]);
	else
		count++;
	}
}

function processFiles(dir,outputDir) {
	list = getFileList(dir);
    for (i=0; i<list.length; i++) {
        if (endsWith(list[i], "/"))
            processFiles(""+dir+list[i], outputDir);
        else {
		showProgress(n++, count);
              processFile(dir,outputDir,list[i]);
        }
    }
}

function processFile(dir,outputDir,file01) {
	if ((endsWith(file01, ".nrrd") || endsWith(file01,".NRRD")) && indexOf(file01,"_01") > 0 ) {
		path01 = dir + file01;
		file02 = substring(file01,0,indexOf(file01,"_01"))+"_02"+substring(file01,(indexOf(file01,"_01")+3),lengthOf(file01));
		path02 = dir+file02;
		open(path01);
		title01=getTitle();
print(title01);
		open(path02);
		title02=getTitle();
print(title02);
		mergeComm="red=["+title01+"] green=["+title02+"] blue=*None* gray=*None*";
		print(mergeComm);
		run("Merge Channels...", mergeComm);

		for( i=0 ; i<4 ; i++ ) {
			roiManager("Open", "/Users/jefferis/Desktop/PictureDimorphicClones/RoiSet.zip");
			roiManager("Select", i);
			run("Copy");
			run("Internal Clipboard");
			saveAs("Tiff", dir+substring(file01,0,lengthOf(file01)-5) + "_" + i + ".tif");
			close();			
		}
		close();
	}
}
